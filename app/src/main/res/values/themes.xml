<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.MyReminders" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/primary</item>
        <item name="colorPrimaryVariant">@color/primary_dark</item>
        <item name="colorOnPrimary">@color/primary_light</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/primary</item>
        <item name="colorSecondaryVariant">@color/primary_dark</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>

    <style name="TextInputLayoutStyle" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="strokeColor">@color/primary</item>
        <item name="boxBackgroundColor">@color/white</item>
        <item name="boxStrokeColor">@color/primary</item>
        <item name="boxStrokeWidth">0dp</item>

    </style>

    <style name="TextInputEditText" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="strokeColor">@color/primary_dark</item>
        <item name="boxBackgroundColor">@color/white</item>
        <item name="boxStrokeColor">@color/red</item>
        <item name="boxStrokeWidth">2dp</item>

    </style>

    <style name="borderButton" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="strokeWidth">1dp</item>
    </style>

    <style name="TextInputLayoutTheme" parent="Widget.Design.TextInputLayout">
        <item name="colorOnSurface">@android:color/black</item>
    </style>

    <style name="Theme.CustomSplashScreenTheme" parent="Theme.SplashScreen">
        <item name="android:windowBackground">@drawable/background_splash</item>
        <item name="android:statusBarColor">@color/primary_dark</item>
        <item name="postSplashScreenTheme">@style/Theme.MyReminders</item>

    </style>

    <style name="ThemeOverlay.AppTheme.TextInputEditText.Outlined" parent="">
        <item name="colorControlActivated">@color/white</item>
    </style>

    <style name="TextInputLayoutStylee" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="android:textColorHint">@color/white</item>
        <item name="android:textColor">@color/white</item>
        <item name="hintTextColor">@color/white</item>
        <item name="boxStrokeColor">@color/white</item>
        <item name="android:theme">@style/exampleCursor</item>
    </style>

    <style name="exampleCursor" parent="ThemeOverlay.MaterialComponents.TextInputEditText.OutlinedBox">
        <item name="colorControlActivated">@color/white</item>
    </style>

    <style name="Theme.MyReminders.AppWidgetContainerParent" parent="@android:style/Theme.DeviceDefault">
        <!-- Radius of the outer bound of widgets to make the rounded corners -->
        <item name="appWidgetRadius">16dp</item>
        <!--
        Radius of the inner view's bound of widgets to make the rounded corners.
        It needs to be 8dp or less than the value of appWidgetRadius
        -->
        <item name="appWidgetInnerRadius">8dp</item>
    </style>

    <style name="Theme.MyReminders.AppWidgetContainer" parent="Theme.MyReminders.AppWidgetContainerParent">
        <!-- Apply padding to avoid the content of the widget colliding with the rounded corners -->
        <item name="appWidgetPadding">16dp</item>
    </style>


</resources>